AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  TwilioAccountSid:
    Type: String
    Description: Twilio Account SID
  TwilioAuthToken:
    Type: String
    Description: Twilio Auth Token
  TwilioPhoneNumber:
    Type: String
    Description: Twilio Phone Number
  S3ArtifactBucketName:
    Type: String
    Description: Bucket for template artifacts
  S3OutputBucketName:
    Type: String
    Description: Public bucket for output objects 
  SMSOutputMessage:
    Type: String
    Description: Output message for SMS
    Default: "Buzz This Way ~>"
Resources:
  ApiGatewayCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
        - ApiGatewayCloudWatchRole
        - Arn
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: PollinatorAPI
      Description: API Gateway for Pollinator Serverless Application
      EndpointConfiguration:
        Types:
        - REGIONAL
      FailOnWarnings: true
  ApiGatewayResourceSms:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      PathPart: sms
      RestApiId:
        Ref: ApiGatewayRestApi

  ApiGatewayMethodSmsPost:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId:
        Ref: ApiGatewayResourceSms
      RestApiId:
        Ref: ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebhookLambdaFunction.Arn}/invocations
  WebhookLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: WebhookLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/sms
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: Prod
    DependsOn:
    - ApiGatewayMethodSmsPost
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName:
        Fn::Sub: Prod-${AWS::StackName}-${AWS::Region}
      DeploymentId:
        Ref: ApiGatewayDeployment
      RestApiId:
        Ref: ApiGatewayRestApi
      MethodSettings:
      - DataTraceEnabled: true
        HttpMethod: '*'
        LoggingLevel: INFO
        ResourcePath: /*
        MetricsEnabled: true
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
          - ApiGatewayLogGroup
          - Arn
        Format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/apigateway/${ApiGatewayRestApi}
      RetentionInDays: 14
  WebhookLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt OcrLambdaFunction.Arn
              - !GetAtt FlaskappLambdaFunction.Arn
          - Effect: "Allow"
            Action: 
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource: 
              - !Sub "arn:aws:s3:::${S3OutputBucketName}/*"
              - !Sub "arn:aws:s3:::${S3OutputBucketName}"
              - !Sub arn:aws:s3:::${S3ArtifactBucketName}/*
              - !Sub arn:aws:s3:::${S3ArtifactBucketName}
  OcrLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - rekognition:DetectText
            Resource: '*'
  FlaskappLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
  WebhookLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: webhook.lambda_handler
      Runtime: python3.10
      Code:
        S3Bucket: !Ref S3ArtifactBucketName
        S3Key: lambda_functions/webhook/webhook_package.zip
      MemorySize: 128
      Timeout: 120
      Role:
        Fn::GetAtt:
        - WebhookLambdaExecutionRole
        - Arn
      Environment:
        Variables:
          OCR_LAMBDA_FUNCTION_NAME: 
            Ref: OcrLambdaFunction
          FLASKAPP_LAMBDA_FUNCTION_NAME: 
            Ref: FlaskappLambdaFunction
          TWILIO_ACCOUNT_SID:
            Ref: TwilioAccountSid
          TWILIO_AUTH_TOKEN:
            Ref: TwilioAuthToken
          TWILIO_PHONE_NUMBER:
            Ref: TwilioPhoneNumber
          OUTPUT_BUCKET:
            Ref: S3OutputBucketName
          OUTPUT_MESSAGE:
            Ref: SMSOutputMessage
  OcrLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: ocr.lambda_handler
      Runtime: python3.10
      Code:
        S3Bucket: !Ref S3ArtifactBucketName
        S3Key: lambda_functions/ocr/ocr_package.zip
      MemorySize: 128
      Timeout: 30
      Role:
        Fn::GetAtt:
        - OcrLambdaExecutionRole
        - Arn
  FlaskappLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: flaskapp.lambda_handler
      Runtime: python3.10
      Code:
        S3Bucket: !Ref S3ArtifactBucketName
        S3Key: lambda_functions/flaskapp/flaskapp_package.zip
      MemorySize: 128
      Timeout: 60
      Role:
        Fn::GetAtt:
        - FlaskappLambdaExecutionRole
        - Arn
Outputs:
  ApiGatewayUrlSms:
    Description: URL of the API Gateway
    Value:
      Fn::Sub: https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/sms
    Export:
      Name: ApiGatewayUrlSms
